{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{149:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"frontMatter\",(function(){return s})),n.d(t,\"metadata\",(function(){return i})),n.d(t,\"rightToc\",(function(){return c})),n.d(t,\"default\",(function(){return m}));var a=n(2),o=n(9),r=(n(0),n(170)),s={id:\"write_config\",title:\"Write your own Config\"},i={id:\"write_config\",title:\"Write your own Config\",description:\"### Pre-requisites\",source:\"@site/docs/write_config.mdx\",permalink:\"/nautilus_docs/docs/write_config\",editUrl:\"https://github.com/facebook/docusaurus/edit/master/website/docs/write_config.mdx\",sidebar:\"sidebar\",previous:{title:\"Generate a Vector Map\",permalink:\"/nautilus_docs/docs/vectorize\"},next:{title:\"Config Parameters\",permalink:\"/nautilus_docs/docs/config_params\"}},c=[{value:\"Pre-requisites\",id:\"pre-requisites\",children:[]},{value:\"Finding topic names\",id:\"finding-topic-names\",children:[]},{value:\"Inside Your new Config:\",id:\"inside-your-new-config\",children:[]}],d={rightToc:c};function m(e){var t=e.components,n=Object(o.a)(e,[\"components\"]);return Object(r.b)(\"wrapper\",Object(a.a)({},d,n,{components:t,mdxType:\"MDXLayout\"}),Object(r.b)(\"h3\",{id:\"pre-requisites\"},\"Pre-requisites\"),Object(r.b)(\"p\",null,\"If you want to run your own data through nautilus you most likely will need to write a small config file with the parameters to use for you specific bag file.\"),Object(r.b)(\"p\",null,Object(r.b)(\"strong\",{parentName:\"p\"},\"Before you start you will need to have these things:\")),Object(r.b)(\"ol\",null,Object(r.b)(\"li\",{parentName:\"ol\"},\"A ROS Bag file, you can learn more about \",Object(r.b)(\"a\",Object(a.a)({parentName:\"li\"},{href:\"http://wiki.ros.org/Bags\"}),\"ROS Bag files here\"),\".\"),Object(r.b)(\"li\",{parentName:\"ol\"},\"Your bag should have Odometry and LiDAR Topics (If you are unsure, use the next section to see if they exist in your Bag file).\")),Object(r.b)(\"h3\",{id:\"finding-topic-names\"},\"Finding topic names\"),Object(r.b)(\"p\",null,\"First you will need to get the LiDAR and Odometry topic names from your bag. You can use the \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"rosbag info\"),\" command for this. Here is the output for the LGRC Bag used in the \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"/nautilus_docs/docs/run_nautilus\"}),\"tutorial to get nautilus running\"),\", you can find the \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"https://drive.google.com/open?id=1thDp4MJF6l2yZ9Z_JFAmdhMQZrld0oQ5\"}),\"bag here\"),\".\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{}),\"> rosbag info data/00010_2019-05-16-03-59-04_0.bag\\npath:        data/00010_2019-05-16-03-59-04_0.bag\\nversion:     2.0\\nduration:    2:24s (144s)\\nstart:       Aug 07 2019 18:53:39.02 (1565218419.02)\\nend:         Aug 07 2019 18:56:03.08 (1565218563.08)\\nsize:        1.5 GB\\nmessages:    88266\\ncompression: none [1367/1367 chunks]\\ntypes:       cobot_msgs/LocalizationMsg              [d97acce230cd4cd8961fb0e1730022b9]\\n             dynamic_reconfigure/Config              [958f16a05573709014982821e6822580]\\n             dynamic_reconfigure/ConfigDescription   [757ce9d44ba8ddd801bb30bc456f946f]\\n             geometry_msgs/Twist                     [9f195f881246fdfa2798d1d3eebca84a]\\n             geometry_msgs/TwistStamped              [98d34b0043a2093cf9d9345ab6eef12e]\\n             geometry_msgs/Vector3Stamped            [7b324c7325e683bf02a9b14b01090ec7]\\n             jackal_msgs/Drive                       [601cf097cd47c174590c366c6ddd5fb3]\\n             jackal_msgs/Feedback                    [3bdabb0ef46338ee5672d1b82220ab49]\\n             multi_model_control_native/DriveStamped [3c1ca058b9dc17aff4cfac0c666ed6d1]\\n             nav_msgs/Odometry                       [cd5e73d190d741a2f92e81eda573aca7]\\n             nmea_msgs/Sentence                      [9f221efc5f4b3bac7ce4af102b32308b]\\n             rosgraph_msgs/Log                       [acffd30cd6b6de30f120938c17c593fb]\\n             sensor_msgs/CompressedImage             [8f7a12909da2c9d3332d540a0977563f]\\n             sensor_msgs/Imu                         [6a62c6daae103f4ff57a132d6f95cec2]\\n             sensor_msgs/LaserScan                   [90c7ef2dc6895d81024acba2ac42f369]\\n             sensor_msgs/NavSatFix                   [2d3a8cd499b9b4a0249fb98fd05cfa48]\\n             sensor_msgs/PointCloud2                 [1158d486dd51d683ce2f1be655c3c181]\\n             sensor_msgs/TimeReference               [fded64a0265108ba86c3d38fb11c0c16]\\ntopics:      /cmd_drive                                                  6890 msgs    : jackal_msgs/Drive                      \\n             /cmd_drive_stamped                                          6890 msgs    : multi_model_control_native/DriveStamped\\n             /cmd_vel                                                    6576 msgs    : geometry_msgs/Twist                    \\n             /cmd_vel_stamped                                            6573 msgs    : geometry_msgs/TwistStamped             \\n             /feedback                                                   2753 msgs    : jackal_msgs/Feedback                   \\n             /imu/data                                                   9963 msgs    : sensor_msgs/Imu                        \\n             /imu/data_raw                                               9970 msgs    : sensor_msgs/Imu                        \\n             /imu/mag                                                    9963 msgs    : geometry_msgs/Vector3Stamped           \\n             /navsat/fix                                                 1379 msgs    : sensor_msgs/NavSatFix                  \\n             /navsat/nmea_sentence                                       5214 msgs    : nmea_msgs/Sentence                     \\n             /navsat/time_reference                                      1379 msgs    : sensor_msgs/TimeReference              \\n             /odometry/filtered                                          6889 msgs    : nav_msgs/Odometry                      \\n             /odometry/raw                                               2755 msgs    : nav_msgs/Odometry                      \\n             /rosout                                                       29 msgs    : rosgraph_msgs/Log                       (3 connections)\\n             /rosout_agg                                                   25 msgs    : rosgraph_msgs/Log                      \\n             /set_location                                                  1 msg     : cobot_msgs/LocalizationMsg             \\n             /stereo/left/image_raw/compressed                           4140 msgs    : sensor_msgs/CompressedImage            \\n             /stereo/left/image_raw/compressed/parameter_descriptions       1 msg     : dynamic_reconfigure/ConfigDescription  \\n             /stereo/left/image_raw/compressed/parameter_updates            1 msg     : dynamic_reconfigure/Config             \\n             /stereo/right/image_raw/compressed                          4140 msgs    : sensor_msgs/CompressedImage            \\n             /stereo/right/image_raw/compressed/parameter_descriptions      1 msg     : dynamic_reconfigure/ConfigDescription  \\n             /stereo/right/image_raw/compressed/parameter_updates           1 msg     : dynamic_reconfigure/Config             \\n             /velodyne_2dscan_high_beams                                 1367 msgs    : sensor_msgs/LaserScan                  \\n             /velodyne_points                                            1366 msgs    : sensor_msgs/PointCloud2\\n\")),Object(r.b)(\"p\",null,'There is a lot of output here, but all we care about is the final section named \"topics\". We then need an odometry message of the type ',Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"nav_msgs/Odometry\"),\" and a LiDAR message of type \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"sensor_msgs/LaserScan\"),\". As long as you have two topics with both of these types of messages (listed after the colon on the right) you can run your data with nautilus! \"),Object(r.b)(\"p\",null,'The topics we need are \"/odometry/raw\" for odometry, and \"/velodyne_2dscan_high_beams\" for LiDAR.'),Object(r.b)(\"div\",{className:\"admonition admonition-info alert alert--info\"},Object(r.b)(\"div\",Object(a.a)({parentName:\"div\"},{className:\"admonition-heading\"}),Object(r.b)(\"h5\",{parentName:\"div\"},Object(r.b)(\"span\",Object(a.a)({parentName:\"h5\"},{className:\"admonition-icon\"}),Object(r.b)(\"svg\",Object(a.a)({parentName:\"span\"},{xmlns:\"http://www.w3.org/2000/svg\",width:\"14\",height:\"16\",viewBox:\"0 0 14 16\"}),Object(r.b)(\"path\",Object(a.a)({parentName:\"svg\"},{fillRule:\"evenodd\",d:\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"})))),\"info\")),Object(r.b)(\"div\",Object(a.a)({parentName:\"div\"},{className:\"admonition-content\"}),Object(r.b)(\"p\",{parentName:\"div\"},\"If you are using CobotOdometry messages, they are differential odometry and need to set the \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"differential_odom=true\"),\" parameter to your config file. You can specify the path still using the \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"lidar_path\"),\" config parameter like below.\"))),Object(r.b)(\"p\",null,\"Now we will create a new config file in the config folder:\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{}),\"touch myconfig.lua\\n\")),Object(r.b)(\"h3\",{id:\"inside-your-new-config\"},\"Inside Your new Config:\"),Object(r.b)(\"p\",null,\"Now, we don't want to have to redefine all the different configuration parameters needed by nautilus, so we will add this line to the top of our config file so that the defaults will be loaded, and anything we don't overwrite will have it's default value.\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{}),\"dofile(debug.getinfo(1).source:match(\\\"@?(.*/)\\\") .. '/default_config.lua')\\n\")),Object(r.b)(\"p\",null,\"Then we need to specify where our bag is:\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{}),'bag_path=\"<path_to_bag_relative_to_nautilus_repository_root>\"\\n')),Object(r.b)(\"p\",null,\"Then we need to specify those topics that we found earlier:\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{}),'lidar_topic=\"<lidar_topic_name_from_before>\"\\nodom_topic=\"<odometry_topic_name_from_before>\"\\n')),Object(r.b)(\"p\",null,\"Finally, we should add the number of poses to process. The default is 30 poses, which is a very small number. I am going to guess for my bag file and say that there is 450 poses that I want to process. If you just want to process the entire bag file then set this parameter to a large number.\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{}),\"pose_number=450\\n\")),Object(r.b)(\"p\",null,\"Now you have written the config file you can run it through nautilus as follows:\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{}),\"./bin/nautilus --config_file config/myconfig.lua\\n\")))}m.isMDXComponent=!0},170:function(e,t,n){\"use strict\";n.d(t,\"a\",(function(){return l})),n.d(t,\"b\",(function(){return p}));var a=n(0),o=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=o.a.createContext({}),m=function(e){var t=o.a.useContext(d),n=t;return e&&(n=\"function\"==typeof e?e(t):i({},t,{},e)),n},l=function(e){var t=m(e.components);return o.a.createElement(d.Provider,{value:t},e.children)},u={inlineCode:\"code\",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,d=c(e,[\"components\",\"mdxType\",\"originalType\",\"parentName\"]),l=m(n),b=a,p=l[\"\".concat(s,\".\").concat(b)]||l[b]||u[b]||r;return n?o.a.createElement(p,i({ref:t},d,{components:n})):o.a.createElement(p,i({ref:t},d))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if(\"string\"==typeof e||a){var r=n.length,s=new Array(r);s[0]=b;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType=\"string\"==typeof e?e:a,s[1]=i;for(var d=2;d<r;d++)s[d]=n[d];return o.a.createElement.apply(null,s)}return o.a.createElement.apply(null,n)}b.displayName=\"MDXCreateElement\"}}]);","extractedComments":[]}